# Move base node parameters. For full documentation of the parameters in this file, please see
#
#  http://www.ros.org/wiki/move_base
#

# A list of recovery behavior plugins to use with move_base.

recovery_behaviors: [{name: conservative_reset, type: clear_costmap_recovery/ClearCostmapRecovery}, {name: rotate_recovery, type: rotate_recovery/RotateRecovery}, {name: aggressive_reset, type: clear_costmap_recovery/ClearCostmapRecovery}] 

# The rate in Hz at which to run the control loop and send velocity commands to the base. 

controller_frequency: 15.0  #5.0

# How long the planner will wait in seconds in an attempt to find a valid plan before space-clearing operations are performed.

planner_patience: 8.0

# How long the controller will wait in seconds without receiving a valid control before space-clearing operations are performed. 

controller_patience: 5.0

# The distance away from the robot in meters at which obstacles will be cleared from the costmap when attempting to clear space in the map. Note, this parameter is only used when the default recovery behaviors are used for move_base. 

conservative_reset_dist: 3

# Whether or not to enable the move_base recovery behaviors to attempt to clear out space. 

recovery_behavior_enabled: true

# Determines whether or not the robot will attempt an in-place rotation when attempting to clear out space. Note: This parameter is only used when the default recovery behaviors are in use, meaning the user has not set the recovery_behaviors parameter to anything custom. 

clearing_rotation_allowed: false

# Determines whether or not to shutdown the costmaps of the node when move_base is in an inactive state 

shutdown_costmaps: false

# How long in seconds to allow for oscillation before executing recovery behaviors. A value of 0.0 corresponds to an infinite timeout.

oscillation_timeout: 0.0

# How far in meters the robot must move to be considered not to be oscillating. Moving this far resets the timer counting up to the ~oscillation_timeout.

oscillation_distance: 0.5

# The rate in Hz at which to run the global planning loop. If the frequency is set to 0.0, the global planner will only run when a new goal is received or the local planner reports that its path is blocked.

planner_frequency: 0.45

